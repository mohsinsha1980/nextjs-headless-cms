import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";

const inter = Inter({ subsets: ["latin"] });

export default function Home({ allPosts, allPages }: any) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <h1>Posts</h1>
        {allPosts.data.posts.edges.length > 0
          ? allPosts.data.posts.edges.map((item: any, index: number) => {
              return (
                <div key={index}>
                  <h2>{item.node.title}</h2>
                  <p>{item.node.slug}</p>
                  <p>{item.node.excerpt}</p>
                </div>
              );
            })
          : null}

        <hr style={{ width: "100%" }} />

        <h1>Pages</h1>

        {allPages.data.pages.edges.length > 0
          ? allPages.data.pages.edges.map((item: any, index: number) => {
              return (
                <div key={index}>
                  <h2>{item.node.title}</h2>
                  <p>{item.node.slug}</p>
                  <p>{item.node.excerpt}</p>
                </div>
              );
            })
          : null}
      </main>
    </>
  );
}

async function getAllPostsForHome(preview: boolean) {
  try {
    const headers = {
      "content-type": "application/json",
    };
    const requestBody = {
      query: `query postsQuery{
        posts{
          edges {
            node{
              title
              excerpt
              slug
            }
          }
        }
      }`,
    };
    const options = {
      method: "POST",
      headers,
      body: JSON.stringify(requestBody),
    };
    const response = await (
      await fetch(process.env.WORDPRESS_API_URL, options)
    ).json();
    const allPosts = await JSON.parse(JSON.stringify(response));
    return allPosts;
  } catch (err) {
    console.log("ERROR DURING FETCH REQUEST", err);
  }
}

async function getAllPagesForHome(preview: boolean) {
  try {
    const headers = {
      "content-type": "application/json",
    };
    const requestBody = {
      query: `query pagesQuery{
        pages{
          edges{
            node{
              title
              content
              slug
            }
          }
        }
      }`,
    };
    const options = {
      method: "POST",
      headers,
      body: JSON.stringify(requestBody),
    };
    const response = await (
      await fetch(process.env.WORDPRESS_API_URL, options)
    ).json();
    const allPages = await JSON.parse(JSON.stringify(response));
    return allPages;
  } catch (err) {
    console.log("ERROR DURING FETCH REQUEST", err);
  }
}

export async function getStaticProps({ preview = false }) {
  const allPosts = await getAllPostsForHome(preview);
  const allPages = await getAllPagesForHome(preview);

  return {
    props: { allPosts, allPages, preview },
    revalidate: 10,
  };
}
